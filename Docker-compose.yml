version: '3'
services:
  api-gateway:
    container_name: api-gateway-container
    build:
      context: .
      dockerfile: ./services/api-gateway/Dockerfile
      args:
        PORT: ${API_GATEWAY_PORT}
    restart: always
    env_file:
      - .env
    environment:
      - ENV=dev
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    networks:
      - banking_network
  authentication-service:
    container_name: authentication-service-container
    build:
      context: .
      dockerfile: ./services/authentication-service/Dockerfile
      args:
        PORT: ${AUTHENTICATION_SERVICE_PORT}
    restart: always
    env_file:
      - .env
    environment:
      - ENV=dev
    ports:
      - "${AUTHENTICATION_SERVICE_PORT}:${AUTHENTICATION_SERVICE_PORT}"
    networks:
      - banking_network
  transaction-logger-service:
    container_name: transaction-logger-container
    build:
      context: .
      dockerfile: ./services/transaction-logger-service/Dockerfile
      args:
        PORT: ${TRANSACTION_LOGGER_SERVICE_PORT}
    restart: always
    env_file:
      - .env
    environment:
      - ENV=dev
    ports:
      - "${TRANSACTION_LOGGER_SERVICE_PORT}:${TRANSACTION_LOGGER_SERVICE_PORT}"
    networks:
      - banking_network
  transaction-processor-service:
    hostname: transaction-processor-container
    build:
      context: .
      dockerfile: ./services/transaction-processor-service/Dockerfile
      args:
        PORT: ${TRANSACTION_PROCESSOR_SERVICE_PORT}
    restart: always
    env_file:
      - .env
    environment:
      - ENV=dev
    ports:
      - "${TRANSACTION_PROCESSOR_SERVICE_PORT}:${TRANSACTION_PROCESSOR_SERVICE_PORT}"
    deploy:
      mode: replicated
      replicas: 2
    networks:
      - banking_network
  mysql:
    image: mysql:8.0
    container_name: mysql_container
    restart: always
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - banking_network

  mongodb:
    image: mongo:6.0
    container_name: mongodb_container
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - banking_network

  redis:
    image: redis:latest
    container_name: redis_container
    restart: always
    env_file:
      - .env
    command: sh -c "redis-server --requirepass ${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - banking_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_container
    restart: always
    env_file:
      - .env
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - banking_network

volumes:
  mysql_data:
  mongodb_data:
  redis_data:
  rabbitmq_data:


networks:
  banking_network:
    name: banking_network
    driver: bridge
